<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
<!--	数据源-->
<!--mysql数据源-->
<!--	mysql数据源也修改为weblogic连接池-->
<!--	<bean id="mysqlDateSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
<!--		<property name="jndiName">-->
<!--			<value>mysql_db</value>-->
<!--		</property>-->
<!--	</bean>-->
	
	<bean id="dbcpDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />         
	    <property name="url" value="jdbc:mysql://121.199.31.33:3306/vip_db" />         
	    <property name="username" value="test_cat" />         
	    <property name="password" value="test_cat123" />
	    
	    <property name="initialSize" value="5"></property>  
        <property name="maxActive" value="20"></property>
        <property name="minIdle" value="5"></property>  
	    <property name="maxIdle" value="10"></property>  
	    <property name="maxWait" value="30"></property>    
	    
	    <property name="removeAbandoned" value="true"></property>
	    <property name="removeAbandonedTimeout" value="10"></property>
	    
	    <property name="testWhileIdle" value="true"></property>
	    <property name="validationQuery" value="select 1"></property>
	</bean>


<!--	simpleJdbcTemplate-->
	<bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg name="dataSource" ref="dbcpDataSource"></constructor-arg>
<!--		<constructor-arg name="dataSource" ref="mysqlDateSource"></constructor-arg>-->
	</bean>
	
	<bean id="sqlDao" class="com.zzc.core.dao.daoImpl.SqlDaoImpl">
		<constructor-arg name="simpleJdbcTemplate" ref="simpleJdbcTemplate"></constructor-arg>
		<constructor-arg name="sql" value="select SQL_STATEMENT from sql_code where domain = 'WEB' and tab_name = :TAB_NAME and sql_name = :SQL_NAME"></constructor-arg>
		<property name="log" ref="log"></property>
	</bean>
	
	
<!--事务配置start-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--		<property name="dataSource" ref="mysqlDateSource"></property>-->
		<property name="dataSource" ref="dbcpDataSource"></property>
<!--		事务超时时间  设置为（60*1=60） 1分钟-->
		<property name="defaultTimeout" value="60"></property>
	</bean>
<!-- aop	事务通知-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="ZzcRollbackException" isolation="DEFAULT"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="ZzcRollbackException" isolation="DEFAULT"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="ZzcRollbackException" isolation="DEFAULT"/>
			<tx:method name="*" propagation="REQUIRED" rollback-for="ZzcRollbackException" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>
	
	<!--    事务切面规则-->
	<aop:config>
<!--		定义切面  拦截com.zzc.service包及其子包下面的所有以Impl结尾的类中的任意方法-->
		<aop:pointcut id="transactionServicePointCut" expression="execution(* com.zzc.service..*Service.*(..))"/>
<!--		给切面绑定拦截规则-->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionServicePointCut"/>
	</aop:config>
	
<!--	添加myBatis支持-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	    <property name="dataSource" ref="dbcpDataSource" />  
	  
	  	<!--  
	        该属性用来指定MyBatis的XML配置文件路径,跟Spring整合时，编写MyBatis映射文件的目的无非是配置一下typeAlias、setting之类的  
	        元素。不用在其中指定数据源，或者事务处理方式。就算配置了也会被忽略。因为这些都是使用Spring中的配置  
	        。当然如果你不打算添加typeAlias 之类的设置的话，你连MyBatis的配置文件都不用写，更不用配置这个属性了  
	    -->  
     	<property name="configLocation" value="classpath:MyBatis-config.xml"/>   
	    
	  	<!-- 该配置文件用来指定Mapper映射文件的位置 ，如果映射文件与相应的接口同名，且在同一路径下，那么可以不配置该选项-->  
	    <!--<property name="mapperLocations" value="src/UserMapper.xml"/>-->  
	</bean> 
	
	<!--   注册Mapper方式一 
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
    	<property name="mapperInterface" value="org.hyn.maper.UserMapper"/> 
    	<property name="sqlSessionFactory" ref="sqlSessionFactory"/> 
    </bean>  
	-->  
  
	<!-- 注册Mapper方式二：也可不指定特定mapper，而使用自动扫描包的方式来注册各种Mapper ，配置如下：-->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <property name="basePackage" value="com.zzc.dao.VipMrg" />  
	</bean> 
<!--	mybatis end  -->

<!--	拦截器-->
	<bean id="loginInterceptor" class="com.zzc.filter.Interceptor.LoginInterceptor">
		<property name="sqlDao" ref="sqlDao"/>
	</bean>
	
<!--	日志log4j-->
	<bean id="log" class="org.apache.log4j.Logger" factory-method="getRootLogger">
	</bean>
	
	
	<bean id="executeTimer" class="com.zzc.core.ExecuteTimer">
		<property name="log" ref="log"></property>
	</bean>
<!--	end统计执行时间aop-->

<!--获取spring上下文工具类-->
	<bean class="com.zzc.core.SpringAppContext" >
	</bean>
	
	<bean class="com.zzc.core.SpringAppListener"></bean>
<!--end-->
</beans>